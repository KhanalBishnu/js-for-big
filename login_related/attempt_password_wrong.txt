1.
    
 	$table->integer('login_attempts')->default(0);
         $table->timestamp('login_lockout_time')->nullable();

2,
 $user = User::where('email', $request->input('email'))->first();

        if ($user && $user->login_lockout_time && $user->login_lockout_time > Carbon::now()) {
            $lockoutTimeRemaining = Carbon::now()->diffInSeconds($user->login_lockout_time);
            return response()->json(['message' => 'Too many login attempts. Please try again in ' . $lockoutTimeRemaining . ' seconds.'], 401);
        }

        $credentials = $request->only('email', 'password');

        if (Auth::attempt($credentials)) {
            $this->resetLoginAttempts($user);
            // Proceed with login
            // ...
        } else {
            if ($user) {
                $this->incrementLoginAttempts($user);

                if ($user->login_attempts >= 5) {
                    $this->lockoutUser($user);
                    return response()->json(['message' => 'Too many login attempts. Please try again in 5 minutes.'], 401);
                }
            }

            return response()->json(['message' => 'Invalid email or password.'], 401);
        }
    }

    protected function resetLoginAttempts(User $user)
    {
        $user->login_attempts = 0;
        $user->login_lockout_time = null;
        $user->save();
    }

    protected function incrementLoginAttempts(User $user)
    {
        $user->login_attempts++;
        $user->save();
    }

    protected function lockoutUser(User $user)
    {
        $user->login_lockout_time = Carbon::now()->addMinutes(5);
        $user->save();
    }